FROM ubuntu:xenial
#FROM ubuntu:trusty
#FROM x3193/dc:latest
MAINTAINER x3193.tk <x3193@x3193.tk> 

ENV DEBIAN_FRONTEND noninteractive
ENV HOME /root
ENV USER root

# Install packages
RUN dpkg --configure -a && apt-get install -f && apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install sudo net-tools openssh-server pwgen zip unzip python-numpy python3-numpy cron
RUN mkdir -p /var/run/sshd && sed -i "s/UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g" /etc/ssh/sshd_config && sed -i "s/UsePAM.*/UsePAM no/g" /etc/ssh/sshd_config && sed -i "s/PermitRootLogin.*/PermitRootLogin yes/g" /etc/ssh/sshd_config

ADD set_root_pw.sh /set_root_pw.sh
ADD run.sh /run.sh
RUN chmod +x /*.sh

RUN echo "-------------------Data install----------------"
ADD shell /root/shell
RUN chmod -R +x /root/shell
#RUN sudo sh /root/shell/setup/this/vnc-wine.sh "docker"

RUN echo "---------------------pre-install-----------------------"   \
&& sudo DEBIAN_FRONTEND=noninteractive apt-get install -y  --install-recommends --no-install-recommends sudo net-tools wget vim zip unzip python-numpy python3-numpy cron 
RUN echo "-----------------------configure---------------------"   \
&& sudo dpkg --configure -a \
&& sudo chmod -R 7777 /root/shell/conf  
RUN echo "---------------------souce.list-----------------------"   \
&& cd /root/shell/conf/source \
&& sudo cp -R -f /etc/apt/sources.list /etc/apt/sources.list.backup \
&& sudo cp -R -f sources.list.xenial /etc/apt/sources.list \
&& sudo rm -rf -R /var/lib/apt/lists/* \
&& sudo dpkg --configure -a \
&& sudo apt-get install -f \
&& sudo apt-get dist-upgrade -y  \
&& sudo apt-get update -y \
&& sudo apt-get upgrade -y  
RUN echo "---------------------zh-cn-----------------------"   \
&& cd /root/shell/conf  \
&& sudo echo "export LC_ALL='zh_CN.UTF-8' LANG='zh_CN.UTF-8' LANGUAGE='zh_CN:zh:en_US:en'" >> ~/.profile \
&& sudo echo "export LC_ALL='zh_CN.UTF-8' LANG='zh_CN.UTF-8' LANGUAGE='zh_CN:zh:en_US:en'" >> /etc/profile \
&& sudo echo "TZ='Asia/Shanghai'; export TZ" >> ~/.profile \
&& sudo DEBIAN_FRONTEND=noninteractive apt-get install -y  --install-recommends language-pack-zh-hant language-pack-zh-hans language-pack-zh-hans-base language-pack-zh-hant-base language-pack-gnome-zh-hant ttf-ubuntu-font-family fonts-wqy-microhei \
&& sudo mkdir -vp /usr/share/fonts/xpfonts \
&& cd /root/shell/conf  \
&& sudo cp -R -f /ttf/*.ttf /usr/share/fonts/xpfonts \
&& sudo mkfontscale \
&& sudo mkfontdir \
&& sudo fc-cache -fv 
RUN echo "---------------------input-----------------------"  \
&& sudo apt-get remove ibus -y \
&& export LC_ALL='zh_CN.UTF-8' LANG='zh_CN.UTF-8' LANGUAGE='zh_CN:zh:en_US:en' \
&& sudo DEBIAN_FRONTEND=noninteractive apt-get install -y  --install-recommends scim \
&& sudo dpkg --configure -a \
&& sudo apt-get install -f \
&& sudo DEBIAN_FRONTEND=noninteractive apt-get install -y  --install-recommends scim-pinyin scim-tables-zh -y 
RUN echo "---------------------------SSH-----------------"   \
&& cd /root/shell/conf  \
&& sudo rm -rf ~/.ssh 
#RUN ssh-keygen -t rsa -f ~/.ssh/id_rsa -N "" \
&& ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N "" \
&& cd /root/shell/conf/.ssh   \
&& sudo cp -R -f known_hosts id_rsa.pub id_rsa authorized_keys default.ppk ~/.ssh  \
&& sudo chmod -R 0600 ~/.ssh  \
&& sudo chmod 0700 ~  \
&& sudo chmod 0700 ~/.ssh  \
&& sudo chmod 0644 ~/.ssh/authorized_keys  \
&& sudo mkdir -vp ~/ssh \
&& sudo cp -R -f ~/.ssh/* ~/ssh \
&& cd /root/shell/conf/ssh  \
&& sudo cp -R -f ssh /etc/init.d  
RUN echo "=================================================" 
#RUN sudo service ssh start  
RUN echo "=================================================" 
RUN echo "---------------------crontab-----------------------"   \
&& cd /root/shell/conf/cron  \
&& sudo cp -R -f crontab /etc  \
&& sudo cp -R -f cron_hourly.sh /etc/cron.hourly  \
&& sudo cp -R -f cron_daily.sh /etc/cron.daily  
RUN echo "=================================================" 
#RUN sudo /etc/init.d/cron restart  
#RUN sudo cron   
#RUN sudo /etc/init.d/cron restart  
RUN echo "=================================================" 
RUN echo "---------------------proxy-----------------------"  \
&& sudo DEBIAN_FRONTEND=noninteractive apt-get install -y  --install-recommends proxychains expect dnsutils 
#RUN sudo echo "socks5 127.0.0.1 9999" >> /etc/proxychains.conf \
&& cd /root/shell/conf/Proxychains \
&& sudo mkdir -vp /root/Desktop/Proxychains \
&& sudo cp -R -f *.desktop /root/Desktop/Proxychains \
&& sudo cp -R -f proxychains.conf /etc 
RUN echo "--------------------VNC------------------------"   \
&& export LC_ALL='zh_CN.UTF-8' LANG='zh_CN.UTF-8' LANGUAGE='zh_CN:zh:en_US:en' 
#RUN sudo DEBIAN_FRONTEND=noninteractive apt-get build-dep -y  --install-recommends xorg lxde tightvncserver gtk2-engines-murrine autocutsel git \
&& sudo DEBIAN_FRONTEND=noninteractive apt-get install -y  --install-recommends xorg lxde tightvncserver x11vnc autocutsel git 
RUN echo "CHROMIUM_FLAGS='--user-data-dir'" >> /etc/chromium-browser/default \
&& cd /root/shell/conf/vncserver \
&& sudo chmod -R 7777 /root/shell/conf  \
&& sudo find /root/shell/conf/* -name noVNC-master.zip -delete  \
&& sudo wget -O noVNC-master.zip https://codeload.github.com/kanaka/noVNC/zip/master \
&& sudo mkdir -vp /var/www/html \
&& sudo chmod -R 7777 /var/www/html \
&& sudo unzip -o -d /var/www/html/ noVNC-master.zip \
&& sudo chmod -R 7777 /var/www/html \
&& sudo unzip -o -d /var/www/html/noVNC-master/utils websockify.zip \
&& sudo mkdir -vp /root/.vnc \
&& sudo chmod -R 7777 /root/.vnc \
&& cd /root/shell/conf/vncserver  \
&& sudo cp -R -f passwd xstartup /root/.vnc  \
&& sudo chmod -R 0600 /root/.vnc/passwd 
#RUN setsid autocutsel & 
RUN echo "=================================================" \
&& if [ -z "$1"]; then \
&&  tightvncserver -kill :1 \
&&  tightvncserver :1 \
&&  setsid /var/www/html/noVNC-master/utils/launch.sh --vnc localhost:5901 &  \
&& fi  
RUN echo "=================================================" 
RUN echo "--------------------WINE1.6/8------------------------"   \
&& sudo DEBIAN_FRONTEND=noninteractive apt-get build-dep -y  --install-recommends wine1.6 \
&& sudo dpkg --add-architecture i386 \
&& sudo dpkg --configure -a \
&& sudo apt-get install -f \
&& sudo apt-get dist-upgrade -y  \
&& sudo apt-get update -y \
&& sudo apt-get upgrade -y  \
&& dpkg --print-architecture \
&& dpkg --print-foreign-architectures \
&& sudo dpkg --add-architecture i386 \
&& sudo DEBIAN_FRONTEND=noninteractive apt-get build-dep -y  --install-recommends wine1.6 \
&& sudo dpkg --add-architecture i386 \
&& sudo DEBIAN_FRONTEND=noninteractive apt-get install -y  --install-recommends wine1.6 
#RUN  wine32 
#RUN sudo DEBIAN_FRONTEND=noninteractive apt-get build-dep -y  --install-recommends q4wine \
&& sudo DEBIAN_FRONTEND=noninteractive apt-get install -y  --install-recommends q4wine 
#RUN env WINEARCH=win32 WINEPREFIX=~/.wine winecfg 
#RUN env WINEARCH=win64 WINEPREFIX=~/.wine64 winecfg 
RUN echo "------------------------soft--------------------"   \
&& sudo DEBIAN_FRONTEND=noninteractive apt-get install -y  --install-recommends python-software-properties software-properties-common \
&& sudo DEBIAN_FRONTEND=noninteractive apt-get install -y  --install-recommends --no-install-recommends firefox flashplugin-installer pepperflashplugin-nonfree firefox-locale-zh-hant firefox-locale-zh-hans putty filezilla* dosbox putty visualboyadvance visualboyadvance-gtk libreoffice libreoffice-l10n-zh-cn pinta htop aptitude locate xchm curl fceux zsnes 
RUN echo "------------------------rarlinux--------------------"  \
&& cd /root/shell/conf/ \
&& sudo mkdir -vp /root/shell/conf/rarlinux \
&& cd /root/shell/conf/rarlinux \
&& sudo curl -o rarlinux-x64-5.3.0.tar.gz  http://www.rarsoft.com/rar/rarlinux-x64-5.3.0.tar.gz \
&& sudo tar xvfz rarlinux-x64-5.3.0.tar.gz  \
&& cd /root/shell/conf/rarlinux/rar \
&& sudo mkdir -vp /usr/local/bin \
&& sudo mkdir -vp /usr/local/lib \
&& sudo cp -R -f rar unrar /usr/local/bin \
&& sudo cp -R -f rarfiles.lst /etc \
&& sudo cp -R -f default.sfx /usr/local/lib 
RUN echo "------------------------rarlinux--------------------"  
RUN echo "------------------------Clean--------------------"   \
&& sudo apt-get autoremove -y   \
&& sudo apt-get clean -y   \
&& sudo apt-get autoclean -y   
RUN echo "--------------------------------------------"  

#RUN sudo sh /root/shell/setup/this/u7php.sh
RUN echo "--------------------Data install---------------"

ENV AUTHORIZED_KEYS **None**
ENV ROOT_PASS EUIfgwe7

EXPOSE 22
EXPOSE 80
EXPOSE 6080
EXPOSE 5901
EXPOSE 5902

WORKDIR /root

CMD ["/run.sh"]
